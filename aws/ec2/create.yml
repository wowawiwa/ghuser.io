---
# This playbook deploys a new EC2 instance

- hosts: localhost
  connection: local
  gather_facts: False
  vars_prompt:
    - name: vpc_id
      prompt: VPC id
      private: no
      default: vpc-d8c0f4bc
    - name: subnet_id
      prompt: Subnet id
      private: no
      default: subnet-b68a16c0
  tasks:
    - name: Create EC2 Security Group
      ec2_group:
        name: ghuser-sg
        description: ghuser
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
    - name: Create EC2 instance
      ec2:
        key_name: "{{ instance_name }}"
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ subnet_id }}"
        group: "default,ghuser-sg"
        image: ami-759bc50a # Ubuntu 16.04 hvm:ebs-ssd

        # Note: if you want to build the Reframe web app, you'll need at least 2GB RAM (t2.small)
        instance_type: t2.nano

        wait: true
        instance_tags:
          Name: "{{ instance_name }}"
      register: created_instance
    - add_host:
        hostname: "{{ created_instance.instances[0].public_ip }}"
        groupname: created_instance
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ created_instance.instances[0].public_ip }}"
        port: 22

- hosts: created_instance
  gather_facts: True
  user: ubuntu
  vars_prompt:
    - name: git_name
      prompt: Git name
      private: no
      default: Aurelien Lourot
    - name: git_email
      prompt: Git email
      private: no
      default: aurelien.lourot@gmail.com
    - name: github_client_id
      prompt: GitHub client id (e.g. 0123456789abcdef0123)
      private: no
    - name: github_client_secret
      prompt: GitHub client secret (e.g. 0123456789abcdef0123456789abcdef01234567)
      private: yes
    - name: github_username
      prompt: GitHub username
      private: no
      default: AurelienLourot
    - name: github_password
      prompt: GitHub password
      private: yes
    - name: sentry_dns
      prompt: Sentry DNS (e.g. https://0123456789abcdef0123456789abcdef:0123456789abcdef0123456789abcdef@sentry.io/1234567)
      private: yes
  tasks:
    - name: Download Node.js setup script
      get_url:
        url: https://deb.nodesource.com/setup_10.x
        dest: /tmp/
        mode: 0755
    - name: Run Node.js setup script
      command: /tmp/setup_10.x
      become: True
    - name: Install Node.js
      apt:
        name: nodejs
      become: True
    - name: Setup Git user name
      git_config:
        name: user.name
        scope: global
        value: "{{ git_name }}"
    - name: Setup Git user e-mail address
      git_config:
        name: user.email
        scope: global
        value: "{{ git_email }}"
    - name: Setup .bashrc
      lineinfile:
        path: /home/ubuntu/.bashrc
        regexp: "export\\s{{ item.key }}="
        line: "export {{ item.key }}=\"{{ item.val }}\""
      with_items:
        - key: GITHUB_CLIENT_ID
          val: "{{ github_client_id }}"
        - key: GITHUB_CLIENT_SECRET
          val: "{{ github_client_secret }}"
        - key: GITHUB_USERNAME
          val: "{{ github_username }}"
        - key: GITHUB_PASSWORD
          val: "{{ github_password }}"
    - name: git clone ghuser.io
      git:
        repo: "https://{{ github_username }}:{{ github_password }}@github.com/ghuser-io/ghuser.io.git"
        dest: /home/ubuntu/ghuser.io/
    - name: npm install ghuser.io's DB
      command: npm install
      args:
        chdir: /home/ubuntu/ghuser.io/db/
    - name: Reset package-lock.json
      command: git reset --hard HEAD
      args:
        chdir: /home/ubuntu/ghuser.io/
    - name: Install pip
      apt:
        name: python3-pip
      become: True
    - name: Install fetchBot's dependencies
      pip:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
      with_items:
        - name: raven-bash
          version: 1.0
        - name: awscli
          version: 1.16.4
      become: True
    - name: Configure raven-bash
      template:
        src: raven-bash.conf.j2
        dest: /etc/raven-bash.conf
      become: True
    - name: Create ~/.aws/
      file:
        path: /home/ubuntu/.aws
        state: directory
        mode: 0700
    - name: Upload AWS config and credentials
      copy:
        src: "{{ lookup('env','HOME') }}/.aws/{{ item }}"
        dest: "/home/ubuntu/.aws/{{ item }}"
        mode: 0400
      with_items:
        - config
        - credentials
    - name: Install fetchBot's other dependencies
      apt:
        name: jq
      become: True
    - name: Hint
      vars:
        msg: |
          EC2 instance ready. You can e.g. do:
          $ ssh -i secret.pem ubuntu@{{ inventory_hostname }}
          $ tmux new-session -s 0
          $ cd ghuser.io/db/fetchBot/
          $ ./bot.sh
      debug:
        msg: "{{ msg.split('\n') }}"
